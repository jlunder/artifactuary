#include <stdint.h>

#include "array.h"

uint8_t fire_palette[256][4] = {
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  0,   0,   0},
    {  4,   0,   0},
    {  8,   1,   0},
    { 12,   2,   0},
    { 16,   3,   0},
    { 20,   4,   0},
    { 24,   4,   0},
    { 28,   5,   0},
    { 32,   6,   0},
    { 36,   7,   0},
    { 40,   8,   0},
    { 44,   8,   0},
    { 48,   9,   0},
    { 52,  10,   0},
    { 56,  11,   0},
    { 60,  12,   0},
    { 64,  12,   0},
    { 68,  13,   0},
    { 72,  14,   0},
    { 76,  15,   0},
    { 80,  16,   0},
    { 84,  16,   0},
    { 88,  17,   0},
    { 92,  18,   0},
    { 96,  19,   0},
    {100,  20,   0},
    {104,  20,   0},
    {108,  21,   0},
    {112,  22,   0},
    {116,  23,   0},
    {120,  24,   0},
    {124,  24,   0},
    {128,  25,   0},
    {131,  28,   0},
    {134,  30,   1},
    {137,  32,   2},
    {140,  35,   3},
    {144,  37,   4},
    {147,  40,   4},
    {150,  42,   5},
    {153,  44,   6},
    {156,  47,   7},
    {160,  49,   8},
    {163,  52,   8},
    {166,  54,   9},
    {169,  56,  10},
    {172,  59,  11},
    {176,  61,  12},
    {179,  64,  12},
    {182,  66,  13},
    {185,  68,  14},
    {188,  71,  15},
    {192,  73,  16},
    {195,  76,  16},
    {198,  78,  17},
    {201,  80,  18},
    {204,  83,  19},
    {208,  85,  20},
    {211,  88,  20},
    {214,  90,  21},
    {217,  92,  22},
    {220,  95,  23},
    {224,  97,  24},
    {227, 100,  24},
    {230, 102,  25},
    {230, 105,  26},
    {231, 108,  27},
    {231, 112,  28},
    {232, 115,  28},
    {232, 118,  29},
    {232, 121,  30},
    {233, 124,  31},
    {233, 128,  32},
    {234, 131,  32},
    {234, 134,  33},
    {234, 137,  34},
    {235, 140,  35},
    {235, 144,  36},
    {236, 147,  36},
    {236, 150,  37},
    {236, 153,  38},
    {237, 156,  39},
    {237, 160,  40},
    {238, 163,  40},
    {238, 166,  41},
    {238, 169,  42},
    {239, 172,  43},
    {239, 176,  44},
    {239, 179,  44},
    {240, 182,  45},
    {240, 185,  46},
    {241, 188,  47},
    {241, 192,  48},
    {241, 195,  48},
    {242, 198,  49},
    {242, 201,  50},
    {243, 204,  51},
    {243, 206,  57},
    {244, 208,  64},
    {244, 209,  70},
    {244, 211,  76},
    {245, 212,  83},
    {245, 214,  89},
    {246, 216,  96},
    {246, 217, 102},
    {246, 219, 108},
    {247, 220, 115},
    {247, 222, 121},
    {248, 224, 128},
    {248, 225, 134},
    {248, 227, 140},
    {249, 228, 147},
    {249, 230, 153},
    {250, 232, 160},
    {250, 233, 166},
    {250, 235, 172},
    {251, 236, 179},
    {251, 238, 185},
    {252, 240, 192},
    {252, 241, 198},
    {252, 243, 204},
    {253, 244, 211},
    {253, 246, 217},
    {254, 248, 224},
    {254, 249, 230},
    {254, 251, 236},
    {255, 252, 243},
    {255, 254, 249},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
    {255, 255, 255},
};


typedef struct fire_state
{
    uint8_t intensity[ARRAY_HEIGHT][ARRAY_STRIDE];
} fire_state_t;


void init_fire(fire_state_t* state)
{
    memset(state->intensity, 0, sizeof state->intensity);
}


void process_fire(float time, uint8_t target_array[ARRAY_HEIGHT][ARRAY_STRIDE][4], fire_state_t* state)
{
    for(int j = 0; j < ARRAY_HEIGHT; ++j) {
        for(int i = 0; i < ARRAY_WIDTH; ++i) {
            state->intensity[j][i] = rand() % 256;
        }
    }
    for(int j = 0; j < ARRAY_HEIGHT; ++j) {
        for(int i = 0; i < ARRAY_WIDTH; ++i) {
            *(uint32_t*)&target_array[j][i] = *(uint32_t*)&fire_palette[state->intensity[j][i]];
        }
    }
}


